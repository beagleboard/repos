#!/bin/sh
#
# see: dh_installdeb(1)

set -e

package="bb-node-red-installer"
service="node-red"

npm_pkg_install () {
	echo "${package}:installing:[${npm_file}]"
	if [ ! -d /usr/local/lib/node_modules/ ] ; then
		mkdir -p /usr/local/lib/node_modules/ || true
	fi
	if [ -d /usr/local/lib/node_modules/${npm_project}/ ] ; then
		rm -rf /usr/local/lib/node_modules/${npm_project}/ || true
	fi

	echo "${package}:updating:[/usr/local/lib/node_modules/${npm_project}/]"
	tar xf /var/cache/${package}/${npm_file} -C /usr/local/lib/node_modules/
}

npm_install () {
	node_bin="/usr/bin/nodejs"

	unset node_version
	node_version=$(/usr/bin/nodejs --version || true)
	echo "${package}:nodejs:[${node_version}]"

	v8="v8.9.4"

	node_red="node-red-0.17.5-915d73e"
	node_red_mongodb="node-red-node-mongodb-0.0.13-9f290f6"
	node_red_bbio="beaglebone-io-2.3.0-7d20557"
	node_red_five="johnny-five-0.13.0"
	node_red_gpio="node-red-contrib-gpio-0.10.0"

	npm_project="node-red"
	case "${node_version}" in
	v8.*)
		npm_file="${node_red}-${v8}.tar.xz"
		npm_pkg_install
		;;
	esac

	ln -sf /usr/local/lib/node_modules/node-red/red.js /usr/local/bin/node-red
	ln -sf /usr/local/lib/node_modules/node-red/bin/node-red-pi /usr/local/bin/node-red-pi

	if [ ! -d /root/.node-red/ ] ; then
		mkdir -p /root/.node-red/ || true
	fi
	ln -sf /usr/local/lib/node_modules/node-red/settings.js /root/.node-red/settings.js

	if [ ! -d /root/.node-red/lib/flows/ ] ; then
		mkdir -p /root/.node-red/lib/flows/ || true
	fi

	if [ ! -d /root/.node-red/node_modules/ ] ; then
		mkdir -p /root/.node-red/node_modules/ || true
	fi

	case "${node_version}" in
	v8.*)
		npm_project="node-red-node-mongodb"
		npm_file="${node_red_mongodb}-${v8}.tar.xz"
		npm_pkg_install

		npm_project="beaglebone-io"
		npm_file="${node_red_bbio}-${v8}.tar.xz"
		npm_pkg_install

		npm_project="johnny-five"
		npm_file="${node_red_five}-${v8}.tar.xz"
		npm_pkg_install

		npm_project="node-red-contrib-gpio"
		npm_file="${node_red_gpio}-${v8}.tar.xz"
		npm_pkg_install
		;;
	esac

	if [ -d /usr/lib/node_modules/mraa ] ; then
		ln -sf /usr/lib/node_modules/mraa /usr/local/lib/node_modules || true
		ln -sf /usr/lib/node_modules/jsupm* /usr/local/lib/node_modules || true
	fi

	if [ -d /usr/local/lib/node_modules/node-red-node-beaglebone/ ] ; then
		rm -rf /usr/local/lib/node_modules/node-red-node-beaglebone/ || true
	fi

	if [ -d /etc/avahi/services/ ] ; then
		#Annouce http server via DNS Sevice Discovery
		wfile="/etc/avahi/services/node-red.service"
		echo "<?xml version=\"1.0\" standalone='no'?><!--*-nxml-*-->" > ${wfile}
		echo "<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">" >> ${wfile}
		echo "" >> ${wfile}
		echo "<!-- See avahi.service(5) for more information about this configuration file -->" >> ${wfile}
		echo "" >> ${wfile}
		echo "<service-group>" >> ${wfile}
		echo "" >> ${wfile}
		echo "  <name replace-wildcards=\"yes\">Node-RED for %h</name>" >> ${wfile}
		echo "  <service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "    <type>_http._tcp</type>" >> ${wfile}
		echo "    <port>1880</port>" >> ${wfile}
		echo "  </service>" >> ${wfile}
		echo "" >> ${wfile}
		echo "</service-group>" >> ${wfile}
		chown -R root:root ${wfile}
	fi

	systemctl enable ${service}.socket || true
	systemctl start ${service} || true
	echo "${package}:Installed"
}

case "$1" in
    configure)
	npm_install
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

